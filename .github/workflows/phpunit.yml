name: PHPUnit test

on:
  pull_request:
    paths:
      - '.github/workflows/phpunit.yml'
      - 'composer.json'
      - 'src/**'
      - 'tests/**'

jobs:
  phpunit-test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: tests
        ports:
          - 13306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    strategy:
      fail-fast: true
      # DBが1つのため
      max-parallel: 1
      matrix:
        php: [7.4, 8.0, 8.1, 8.2]
        library:
          - { laravel: ^10.0 }
          - { laravel: ^9.0 }
          - { laravel: ^8.0 }
        exclude:
          - { php: 7.4, library: { laravel: ^9.0 } }
          - { php: 7.4, library: { laravel: ^10.0 } }
          - { php: 8.0, library: { laravel: ^10.0 } }
          - { php: 8.1, library: { laravel: ^8.0 } }
          - { php: 8.2, library: { laravel: ^8.0 } }

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php }}
        extensions: mbstring, zip, xml

    - name: Get Composer Cache Directory
      id: composer-cache
      uses: actions/cache@v4
      with:
        path: ${{ github.workspace }}/vendor
        key: "php-${{ matrix.php }}-composer-${{ hashFiles('composer.json') }}"
        restore-keys: "php-${{ matrix.php }}-composer-"

    - name: Laravel Install
      if: steps.composer-cache.outputs.cache-hit != 'true'
      run: |
        composer require --dev "laravel/framework:${{ matrix.library.laravel }}"

    - name: Execute SQL files in MySQL container
      run: |
        mysql -h 127.0.0.1 -P 13306 -uroot -ppassword tests < .docker/mysql-init/areas.sql
        mysql -h 127.0.0.1 -P 13306 -uroot -ppassword tests < .docker/mysql-init/products.sql
        mysql -h 127.0.0.1 -P 13306 -uroot -ppassword tests < .docker/mysql-init/prefectures_and_cities.sql

    - name: Run PHPUnit Test
      # phpunit が 9.3 以降は phpunit.xml のフォーマットが変わっており、非推奨の warning が出る
      # 新しいフォーマットに変換するコマンドを実行する
      # ここでのエラーは重要ではないため、「 || true」を付与してエラーでも続ける
      run: |
        if [[ ${{ matrix.php }} == "8.1" || ${{ matrix.php }} == "8.2" ]]; then
          vendor/bin/phpunit --migrate-configuration || true
        fi
        vendor/bin/phpunit tests/Unit/
      env:
        DB_PORT: 13306
        DB_HOST: 127.0.0.1
        DB_USERNAME: root
        DB_PASSWORD: password
